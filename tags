!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/dhonyimamsaputra/workspace/algoritma_sdet/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230122.0/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
BinarySearchTree	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^class BinarySearchTree {$/;"	c
Max	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^	Max int$/;"	m	struct:main.Memorize	typeref:typename:int
Memorize	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^type Memorize struct {$/;"	s	package:main
Min	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^	Min int$/;"	m	struct:main.Memorize	typeref:typename:int
akhir	learningJS/learning_basic4.js	/^let akhir = getTextFromElements.map(element => {$/;"	v
algoritma_sdet	README.md	/^# algoritma_sdet$/;"	c
anonymousFunction77ef84ef0100	learningJS/learning_basic2.js	/^    result = new Promise(function(resolve, reject){$/;"	f	function:sumWithPromise
anonymousFunction77ef84ef0200	learningJS/learning_basic2.js	/^    result.then(function(resultResolve){$/;"	f
anonymousFunction77f011500100	learningJS/learning_basic3.js	/^    result = new Promise(function(resolve, reject){$/;"	f	function:sumWithPromise
anonymousFunction77f011500200	learningJS/learning_basic3.js	/^    result.then(function(resultResolve){$/;"	f
anonymousFunction77f12a120100	learningJS/learning_basic5.js	/^    return new Promise(function(resolve, reject) {$/;"	f	function:processingPromise
anonymousFunction77f12a120200	learningJS/learning_basic5.js	/^    let resultIsVariableOdd = new Promise(function(resolve, reject) {$/;"	f	function:main
anonymousFunction77f12a120300	learningJS/learning_basic5.js	/^    resultIsVariableOdd.then(function(resolveResult) {$/;"	f
anonymousFunction77f12a120400	learningJS/learning_basic5.js	/^    }, function(rejectResult) {$/;"	f
anonymousFunctionc592dbbd0100	learningJS/learning_basic.js	/^setTimeout(function(){$/;"	f
anonymousFunctionc592dbbd0200	learningJS/learning_basic.js	/^setTimeout(function(){$/;"	f
anonymousFunctionc592dbbd0300	learningJS/learning_basic.js	/^let promiseTest = new Promise(function(resolve, reject){$/;"	f
anonymousFunctionc592dbbd0400	learningJS/learning_basic.js	/^promiseTest.then(function(inputSukses){$/;"	f
anonymousFunctionc592dbbd0500	learningJS/learning_basic.js	/^}, function(inputReject){$/;"	f
anonymousObject77f09db10105	learningJS/learning_basic4.js	/^    detailFisik: [{$/;"	v	variable:objA
array1	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    let array1 = [];$/;"	v
array2	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    let array2 = [];$/;"	v
atomicElementSort	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^function atomicElementSort(arr1, arr2) {$/;"	f
binarySearch	search_algorithm/binary_search_algorithm/binary_search_algorithm.js	/^function binarySearch(arrayInput, searchValue) {$/;"	f
binarySearchForIndexTobeInserted	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^function binarySearchForIndexTobeInserted(inputArr, searchValue) {$/;"	f
binarySearchForIndexTobeInserted	sorting_algorithm/insertion_sort_algorithm/binary_insertion_with_merge_sort_algorithm.js	/^function binarySearchForIndexTobeInserted(inputArr, searchValue) {$/;"	f
binarySearchForIndexTobeInserted	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function binarySearchForIndexTobeInserted(inputArr, searchValue) {$/;"	f
boundariesIndex	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    let boundariesIndex = Math.floor(uniqueArray.length \/ 2);$/;"	v
buatSegitigaAsterik	creativity_algorithm/pyramid_algorithm/pyramid_generator.js	/^function buatSegitigaAsterik(n) {$/;"	f
calculateBoundaries	search_algorithm/binary_search_algorithm/binary_search_algorithm.js	/^function calculateBoundaries(startIndex, endingIndex) {$/;"	f
callAPI	learningJS/learning_basic3.js	/^async function callAPI() {$/;"	f
cetakSegitigaNumberSimetric	creativity_algorithm/pyramid_algorithm/pyramid_generator.js	/^function cetakSegitigaNumberSimetric(banyakDicetak) {$/;"	f
cetakSegitigaSimetris	creativity_algorithm/pyramid_algorithm/pyramid_generator.js	/^function cetakSegitigaSimetris(banyakDicetak) {$/;"	f
closestNumbers	math_algorithm/min_max_algorithm/print_closest_array_pair.js	/^function closestNumbers(arrInput) {$/;"	f
constructor	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^    constructor(root = null) {$/;"	m	class:BinarySearchTree
countSwap	sorting_algorithm/insertion_sort_algorithm/binary_insertion_with_merge_sort_algorithm.js	/^function countSwap(sortedArr, indexInsert, valueToBeInsert) {$/;"	f
countSwap	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function countSwap(sortedArr, indexInsert, valueToBeInsert) {$/;"	f
countingSort	sorting_algorithm/counting_sort_algorithm/counting_sort_algorithm.js	/^function countingSort(arr) {$/;"	f
defaultPayloadCheckUser	learningJS/learning_basic4.js	/^function defaultPayloadCheckUser(name) {$/;"	f
detailFisik	learningJS/learning_basic4.js	/^    detailFisik: [{$/;"	p	variable:objA
devideInsertionSortProcess	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function devideInsertionSortProcess(unsortArr) {$/;"	f
displayer	learningJS/learning_basic5.js	/^function displayer(value) {$/;"	f
divide	math_algorithm/min_max_algorithm/print_closest_array_pair.js	/^function divide(arrInput) {$/;"	f
divideArr	sorting_algorithm/merge_sort_algorithm/merge_sort_2.js	/^function divideArr(arr) {$/;"	f
exponential	learningJS/learning_basic.js	/^function exponential(input) {$/;"	f
exponential	learningJS/learning_basic2.js	/^function exponential(input) {$/;"	f
exponential	learningJS/learning_basic3.js	/^function exponential(input) {$/;"	f
fibonacci	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^func fibonacci() func(int, *Memorize) int {$/;"	f	package:main	typeref:typename:func(int, *Memorize) int
findMaxArrayValue	sorting_algorithm/counting_sort_algorithm/counting_sort_algorithm.js	/^function findMaxArrayValue(arr) {$/;"	f
fs	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^const fs = require('fs');$/;"	C
fs	sorting_algorithm/merge_sort_algorithm/merge_sort_2.js	/^const fs = require('fs');$/;"	C
getTextFromElements	learningJS/learning_basic4.js	/^let getTextFromElements = objA.namaAnak2;$/;"	v
idxRef	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^                idxRef: targetInsertedIndex,$/;"	p	variable:insertionSort.reference
inputArr	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^const inputArr = [1, 1, 2, 1, 2,  1, 2,  1, 2,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, /;"	v
inputArr	sorting_algorithm/quick_sort_algorithm/quick_sort_algorithm.js	/^const inputArr = [1, 1, 2, 1, 2,  1, 2,  1, 2,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, /;"	v
insertMergeSortArr	sorting_algorithm/quick_sort_algorithm/quick_sort_algorithm.js	/^function insertMergeSortArr(inputSortArr, value) {$/;"	f
insertValue	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^    insertValue(val, direction) {$/;"	m	class:BinarySearchTree
insertValueToArr	sorting_algorithm/insertion_sort_algorithm/binary_insertion_with_merge_sort_algorithm.js	/^function insertValueToArr(sortedArr, indexInsert, value) {$/;"	f
insertValueToArr	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function insertValueToArr(sortedArr, indexInsert, value) {$/;"	f
insertionBinarySearchTree	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^function insertionBinarySearchTree(inputArr) {$/;"	f
insertionSort	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^function insertionSort(unsortArr) {$/;"	f
insertionSort	sorting_algorithm/insertion_sort_algorithm/binary_insertion_with_merge_sort_algorithm.js	/^function insertionSort(arr) {$/;"	f
insertionSort	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function insertionSort(arr) {$/;"	f
isContainsLeaf	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^    isContainsLeaf(direction, reference) {$/;"	m	class:BinarySearchTree
kulit	learningJS/learning_basic4.js	/^        kulit: 'hitam'$/;"	p	variable:objA.anonymousObject77f09db10105
left	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    const left = arr.slice(0, middle), right = arr.slice(middle, arr.length);$/;"	C
main	learningJS/learning_basic5.js	/^function main(input) {$/;"	f
main	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^func main() {$/;"	f	package:main
main	math_algorithm/fibonacci_algorithm/fibonacci_generator.go	/^package main$/;"	p
main2	learningJS/learning_basic5.js	/^async function main2(input) {$/;"	f
merge	sorting_algorithm/merge_sort_algorithm/merge_sort_2.js	/^function merge(arr1, arr2) {$/;"	f
merge	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function merge(arr1, arr2) {$/;"	f
mergeSort	math_algorithm/min_max_algorithm/print_closest_array_pair.js	/^function mergeSort(sortArr1, sortArr2) {$/;"	f
mergeSort	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^const mergeSort = arr => {$/;"	f
mergeSortBigData	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^function mergeSortBigData() {$/;"	f
mergeSortBigData	sorting_algorithm/merge_sort_algorithm/merge_sort_2.js	/^function mergeSortBigData() {$/;"	f
middle	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    const middle = Math.floor(arr.length \/ 2);$/;"	C
multiply	learningJS/learning_basic.js	/^function multiply(bilangan2, bilangan3, callback) {$/;"	f
multiply	learningJS/learning_basic2.js	/^function multiply(bilangan2, bilangan3, callback) {$/;"	f
multiply	learningJS/learning_basic3.js	/^function multiply(bilangan2, bilangan3, callback) {$/;"	f
multiply	learningJS/learning_basic5.js	/^function multiply(input) {$/;"	f
mySort	math_algorithm/min_max_algorithm/print_closest_array_pair.js	/^function mySort(unsortArr) {$/;"	f
nama	learningJS/learning_basic4.js	/^    nama: 'Dhony',$/;"	p	variable:objA
namaAnak2	learningJS/learning_basic4.js	/^    namaAnak2: ['Lita', 'Ani', 'Budi'],$/;"	p	variable:objA
objA	learningJS/learning_basic4.js	/^const objA = {$/;"	v
objectPrint	learningJS/learning_lagi.js	/^function objectPrint(a, b) {$/;"	f
pencetak	learningJS/learning_lagi.js	/^function pencetak(a) {$/;"	f
processCallback	learningJS/learning_basic3.js	/^async function processCallback(input, parameterFungsi) {$/;"	f
process_start	sorting_algorithm/swaping_count_on_sorting/count_swaping_times_with_multiple_insertion_sort.js	/^function process_start(arr) {$/;"	f
processingPromise	learningJS/learning_basic5.js	/^function processingPromise(input) {$/;"	f
promiseTest	learningJS/learning_basic.js	/^let promiseTest = new Promise(function(resolve, reject){$/;"	v
quickSort	sorting_algorithm/quick_sort_algorithm/quick_sort_algorithm.js	/^function quickSort(unsortArr) {$/;"	f
recursiveMergeSort	sorting_algorithm/merge_sort_algorithm/merge_sort_2.js	/^function recursiveMergeSort(inputArr) {$/;"	f
reference	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^            reference = {$/;"	v	function:insertionSort
result	learningJS/learning_lagi.js	/^let result = nestedSum(3,5).hasil;$/;"	v
result	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^const result = insertionSort(inputArr)$/;"	C
right	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    const left = arr.slice(0, middle), right = arr.slice(middle, arr.length);$/;"	C
searchBinaryInsertedIndex	sorting_algorithm/quick_sort_algorithm/quick_sort_algorithm.js	/^function searchBinaryInsertedIndex(arrInput, value) {$/;"	f
solve	search_algorithm/hashmap_algorithm/duplicate_number_detection.js	/^function solve(array) {$/;"	f
sortArrayWithRemoveDuplicates	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^const sortArrayWithRemoveDuplicates = inputArr => {$/;"	f
sortedResult	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    let sortedResult = [];$/;"	v
sum	learningJS/learning_basic.js	/^function sum(bilangan1, bilangan2, parameterFungsi) {$/;"	f
sum	learningJS/learning_basic2.js	/^function sum(bilangan1, bilangan2, parameterFungsi) {$/;"	f
sum	learningJS/learning_basic3.js	/^function sum(bilangan1, bilangan2, parameterFungsi) {$/;"	f
sum	learningJS/learning_lagi.js	/^function sum(A, B) {$/;"	f
sumWithAsyncAwait	learningJS/learning_basic3.js	/^async function sumWithAsyncAwait(bilangan1, bilangan2, parameterFungsi) {$/;"	f
sumWithCallback	learningJS/learning_lagi.js	/^async function sumWithCallback(a, b, iniBuatCallback) {$/;"	f
sumWithPromise	learningJS/learning_basic2.js	/^function sumWithPromise(bilangan1, bilangan2, parameterFungsi) {$/;"	f
sumWithPromise	learningJS/learning_basic3.js	/^function sumWithPromise(bilangan1, bilangan2, parameterFungsi) {$/;"	f
swap2var	creativity_algorithm/swap_using_2_variable/swap_2_variable.js	/^function swap2var(a,b) {$/;"	f
tempArr	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^        let tempArr = [];$/;"	v
terbilang	learningJS/learning_lagi.js	/^let terbilang = nestedSum(2,3).terbilang;$/;"	v
uniqueArray	sorting_algorithm/merge_sort_algorithm/merge_sort.js	/^    let uniqueArray = [];$/;"	v
util	data_structure_algorithm/binary_tree_algorithm/binary_search_tree_insertion.js	/^const util = require('util')$/;"	C
valueRef	sorting_algorithm/insertion_sort_algorithm/binary_insertion_sort_algorithm.js	/^                valueRef: sortedArr[targetInsertedIndex]$/;"	p	variable:insertionSort.reference
